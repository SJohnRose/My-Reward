[{"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\index.js":"1","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\App.js":"2","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\reportWebVitals.js":"3","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Home.js":"4","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\Header.js":"5","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\Footer.js":"6","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\utils\\queries.js":"7","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\TeacherList.js":"8","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\NavBar.js":"9","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\MainSection.js":"10","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Teacher.js":"11","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Login.js":"12","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\utils\\mutations.js":"13","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\utils\\auth.js":"14","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Signup.js":"15","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\SignUp.js":"16","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Student.js":"17","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\TeacherOptions.js":"18","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\LoginPage.js":"19","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\NotFound.js":"20","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\Container.js":"21"},{"size":591,"mtime":1683902154305,"results":"22","hashOfConfig":"23"},{"size":1621,"mtime":1683939058819,"results":"24","hashOfConfig":"23"},{"size":362,"mtime":1683191077379,"results":"25","hashOfConfig":"23"},{"size":801,"mtime":1683937256975,"results":"26","hashOfConfig":"23"},{"size":351,"mtime":1683351805357,"results":"27","hashOfConfig":"23"},{"size":247,"mtime":1683351463797,"results":"28","hashOfConfig":"23"},{"size":373,"mtime":1683677576993,"results":"29","hashOfConfig":"23"},{"size":779,"mtime":1683449876799,"results":"30","hashOfConfig":"23"},{"size":1062,"mtime":1683886482287,"results":"31","hashOfConfig":"23"},{"size":1213,"mtime":1683891014111,"results":"32","hashOfConfig":"23"},{"size":458,"mtime":1683888650658,"results":"33","hashOfConfig":"23"},{"size":3474,"mtime":1683937987352,"results":"34","hashOfConfig":"23"},{"size":524,"mtime":1683938379190,"results":"35","hashOfConfig":"23"},{"size":757,"mtime":1683682856537,"results":"36","hashOfConfig":"23"},{"size":169,"mtime":1683684907090,"results":"37","hashOfConfig":"23"},{"size":2208,"mtime":1683939005483,"results":"38","hashOfConfig":"23"},{"size":560,"mtime":1683937766462,"results":"39","hashOfConfig":"23"},{"size":691,"mtime":1683694540868,"results":"40","hashOfConfig":"23"},{"size":1043,"mtime":1683889993814,"results":"41","hashOfConfig":"23"},{"size":408,"mtime":1683892610723,"results":"42","hashOfConfig":"23"},{"size":2079,"mtime":1683893386483,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1yj034p",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"66"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\index.js",[],["97","98"],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\App.js",["99"],"import React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\n\nimport { setContext } from '@apollo/client/link/context';\nimport { Routes, Route} from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nimport './App.css';\nimport './index.css';\n\nimport Login from './pages/Login';\nimport Home from './pages/Home';\nimport Student from './pages/Student';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport SignUp from './pages/SignUp';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <div>\n        <ApolloProvider client={client}>\n        <Routes>\n          <Route path=\"/\" element={<Home />}></Route>\n          <Route path=\"/login\" element={<Login />}></Route>  \n          <Route path=\"/signup\" element={<SignUp />}></Route> \n          <Route path=\"/student\" element={<Student />}></Route>  \n          <Route path=\"/add-student\" element={<Student />}></Route>  \n        </Routes>\n        </ApolloProvider>\n        <Footer />\n      </div>\n    </>\n   \n    \n    \n    \n  );\n}\n\nexport default App;\n","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\reportWebVitals.js",[],["100","101"],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Home.js",["102","103","104","105","106"],"import {React, useState} from 'react';\r\nimport { useQuery} from '@apollo/client';\r\nimport { QUERY_TEACHERS } from '../utils/queries';\r\nimport TeacherList from '../components/TeacherList';\r\nimport LoginPage from './LoginPage';\r\nimport SignUp from './SignUp';\r\n\r\nconst Home = () => {\r\n    const { loading, data } = useQuery(QUERY_TEACHERS);\r\n    const teachers = data?.teachers || [];\r\n    //console.log(teachers);\r\n    const [currentPage, setCurrentPage] = useState('Login');\r\n\r\n    const renderPage = () => {\r\n      if (currentPage === 'Login') {\r\n        return <LoginPage />;\r\n      }\r\n      // if (currentPage === 'Student') {\r\n      //   return <SignUpPage />;\r\n      // }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n      {renderPage()}\r\n      \r\n      </div>\r\n    );\r\n  };\r\n  \r\nexport default Home;\r\n  ","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\Header.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\Footer.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\utils\\queries.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\TeacherList.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\NavBar.js",[],["107","108"],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\MainSection.js",["109"],"import React, { useState } from 'react';\r\nimport Home from '../pages/Home';\r\nimport Teacher from '../pages/Teacher';\r\nimport NavBar from './NavBar';\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport Student from '../pages/Student';\r\n\r\nexport default function MainSection() {\r\n  const [currentPage, setCurrentPage] = useState('Home');\r\n\r\n  // This method is checking to see what the value of `currentPage` is. Depending on the value of currentPage, we return the corresponding component to render.\r\n  const renderPage = () => {\r\n    if (currentPage === 'Home') {\r\n      return <Home />;\r\n    }\r\n    if (currentPage === 'Student') {\r\n      return <Student />;\r\n    }\r\n    if (currentPage === 'Reward') {\r\n      return <Student />;\r\n    }\r\n    \r\n  };\r\n\r\n  const handlePageChange = (page) => setCurrentPage(page);\r\n\r\n  return (\r\n    <div className=\"components\">\r\n      <Header />\r\n      {/* We are passing the currentPage from state and the function to update it */}\r\n      <NavBar currentPage={currentPage} handlePageChange={handlePageChange} />\r\n      {/* Here we are calling the renderPage method which will return a component  */}\r\n      {renderPage()}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Teacher.js",["110","111","112","113","114"],"import {React, useState} from 'react';\r\n\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\nimport TeacherOptions from './TeacherOptions';\r\n\r\n\r\n\r\nconst Teacher = () => {\r\n  const [currentPage, setCurrentPage] = useState('Login');\r\n\r\n      return (\r\n      <main className=\"page\">\r\n        \r\n        <div className=\"login-section\">\r\n            <h2> Manage Student Page</h2>\r\n        </div>\r\n      </main>\r\n    );\r\n  };\r\n  \r\nexport default Teacher;","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Login.js",["115","116","117"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_SINGLE_TEACHER, QUERY_TEACHERS } from '../utils/queries';\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_TEACHER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\n\r\n\r\nexport default function Login(props) {\r\n    \r\n    // const [password, setPassword] = useState('');\r\n    // const [email, setEmail] = useState('');\r\n    // const [errorMessage, setErrorMessage] = useState('');\r\n    // const [teacherList, setTeacherList] = useState([]);\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(LOGIN_TEACHER);\r\n          \r\n\r\n    const handleInputChange = (e) => {\r\n      // const { target } = e;\r\n      // const inputType = target.name;\r\n      // const inputValue = target.value;\r\n  \r\n      // if (inputType === 'email') {\r\n      //   setEmail(inputValue);\r\n      // } \r\n      // else if (inputType === 'password') {\r\n      //   setPassword(inputValue);\r\n      // }\r\n        const { name, value } = e.target;\r\n    \r\n        setFormState({\r\n          ...formState,\r\n          [name]: value,\r\n        });\r\n      };    \r\n    \r\n  \r\n    const handleFormSubmit = async (e) => {\r\n      e.preventDefault();\r\n      console.log(formState);\r\n    try {\r\n      const { data } = await login({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.login.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n\r\n    // clear form values\r\n    setFormState({\r\n      email: '',\r\n      password: '',\r\n    });\r\n      // setPassword('');\r\n      // setEmail('');\r\n      // setErrorMessage('');\r\n    };\r\n\r\n    \r\n    // let getEmail = props.email;\r\n    // // console.log(getEmail);\r\n    // // const { loading, error, data } = useQuery(QUERY_TEACHERS);\r\n    // const { loading, error, data } = useQuery(QUERY_SINGLE_TEACHER, {\r\n    //   variables: { email: getEmail },\r\n    // });\r\n    // if (loading) return 'Loading...';\r\n    // if (error) return `Error! ${error.message}`;\r\n      \r\n    \r\n    return (\r\n      <div>\r\n        \r\n        {/* <div> */}\r\n            {/* {JSON.stringify(data)} */}\r\n            {/* <select name='teacher' >\r\n              {data.teachers.map((teacher) => (\r\n              <option key={teacher.id} value={teacher.name}>\r\n              {teacher.name}\r\n              </option>\r\n              ))}\r\n            </select> */}\r\n        {/* </div> */}\r\n        <div>\r\n        {/* {data ? (\r\n              <TeacherOptions />\r\n              \r\n              ) : ( */}\r\n              \r\n        <form className=\"login-form\" onSubmit={handleFormSubmit}>\r\n          <h2 className=\"login-title\">Login </h2>\r\n          Email:\r\n          <input\r\n            value={formState.email}\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n          />\r\n          Password:\r\n          <input\r\n            value={formState.password}\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            type=\"password\"\r\n          />\r\n                   \r\n          <button type=\"submit\">Login</button>\r\n          \r\n        </form>\r\n        {/* ) */}\r\n        {/* } */}\r\n\r\n        {error && (\r\n          <div>\r\n            <p className=\"error-text\">{error.message}</p>\r\n          </div>\r\n            \r\n        )}\r\n\r\n      </div>\r\n      </div>\r\n    );\r\n  };","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\utils\\mutations.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\utils\\auth.js",["118"],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    const decoded = decode(token);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    //window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Signup.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\SignUp.js",["119"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_TEACHER } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\n\r\n\r\nexport default function SignUp(props) {\r\n    \r\n    const [formState, setFormState] = useState({ name: '', email: '', password: '' });\r\n    const [addTeacher, { error, data }] = useMutation(ADD_TEACHER);\r\n          \r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n    \r\n        setFormState({\r\n          ...formState,\r\n          [name]: value,\r\n        });\r\n    };    \r\n    \r\n  \r\n    const handleFormSubmit = async (e) => {\r\n      e.preventDefault();\r\n      console.log(formState);\r\n      try {\r\n        const { data } = await addTeacher({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.addTaacher.token);\r\n      } \r\n        catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n\r\n       \r\n    \r\n    return (\r\n      <div>\r\n             \r\n        {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n         ) : (\r\n              \r\n        <form className=\"login-form\" onSubmit={handleFormSubmit}>\r\n          <h2 className=\"login-title\">New Teacher Sign Up </h2>\r\n          Name:\r\n          <input\r\n            value={formState.name}\r\n            name=\"name\"\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n          />\r\n          Email:\r\n          <input\r\n            value={formState.email}\r\n            name=\"email\"\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n          />\r\n          Password:\r\n          <input\r\n            value={formState.password}\r\n            name=\"password\"\r\n            onChange={handleInputChange}\r\n            type=\"password\"\r\n          />\r\n                   \r\n          <button type=\"submit\">Sign Up</button>\r\n          \r\n        </form>\r\n         )}\r\n\r\n        {error && (\r\n          <div>\r\n            <p className=\"error-text\">{error.message}</p>\r\n          </div>\r\n            \r\n        )}\r\n\r\n      </div>\r\n      \r\n    );\r\n  }","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\Student.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\TeacherOptions.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\LoginPage.js",["120","121"],"import React from 'react';\r\nimport { useQuery, useState } from '@apollo/client';\r\nimport { QUERY_TEACHERS } from '../utils/queries';\r\nimport TeacherList from '../components/TeacherList';\r\nimport Login from './Login';\r\nimport SignUp from './SignUp';\r\n\r\nconst LoginPage = () => {\r\n    const { loading, data } = useQuery(QUERY_TEACHERS);\r\n    const teachers = data?.teachers || [];\r\n    return (\r\n        <main className=\"home-page\">\r\n          {/* <div className=\"home-page\"> */}\r\n            \r\n              {<div className=\"teacher-list\">\r\n            {loading ? (\r\n              <div>Loading...</div>) : \r\n              (\r\n              <TeacherList\r\n                teachers={teachers}\r\n                title=\"Recent rewards....\"\r\n              />\r\n              )}\r\n          </div>}   \r\n          {/* </div> */}\r\n          <div className=\"login-section\">\r\n            <Login />\r\n            <h2> New User? <a href =\"{<SignUp />}\">Sign Up Now </a></h2>\r\n          </div>\r\n        </main>\r\n      );\r\n    };\r\n    \r\n  export default LoginPage;","C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\pages\\NotFound.js",[],"C:\\Users\\shamini\\Projects\\My-Reward\\client\\src\\components\\Container.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":6,"column":10,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"126","severity":1,"message":"132","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":19},{"ruleId":"126","severity":1,"message":"133","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"134","line":9,"column":13,"nodeType":"128","messageId":"129","endLine":9,"endColumn":20},{"ruleId":"126","severity":1,"message":"135","line":10,"column":11,"nodeType":"128","messageId":"129","endLine":10,"endColumn":19},{"ruleId":"126","severity":1,"message":"136","line":12,"column":25,"nodeType":"128","messageId":"129","endLine":12,"endColumn":39},{"ruleId":"122","replacedBy":"137"},{"ruleId":"124","replacedBy":"138"},{"ruleId":"126","severity":1,"message":"139","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":15},{"ruleId":"126","severity":1,"message":"140","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":13},{"ruleId":"126","severity":1,"message":"133","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},{"ruleId":"126","severity":1,"message":"141","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":22},{"ruleId":"126","severity":1,"message":"142","line":10,"column":10,"nodeType":"128","messageId":"129","endLine":10,"endColumn":21},{"ruleId":"126","severity":1,"message":"136","line":10,"column":23,"nodeType":"128","messageId":"129","endLine":10,"endColumn":37},{"ruleId":"126","severity":1,"message":"143","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"127","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"144","line":18,"column":28,"nodeType":"128","messageId":"129","endLine":18,"endColumn":32},{"ruleId":"145","severity":1,"message":"146","line":37,"column":1,"nodeType":"147","endLine":37,"endColumn":34},{"ruleId":"126","severity":1,"message":"143","line":1,"column":26,"nodeType":"128","messageId":"129","endLine":1,"endColumn":35},{"ruleId":"126","severity":1,"message":"148","line":2,"column":20,"nodeType":"128","messageId":"129","endLine":2,"endColumn":28},{"ruleId":"126","severity":1,"message":"133","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar",["149"],["150"],"'TeacherList' is defined but never used.","'SignUp' is defined but never used.","'loading' is assigned a value but never used.","'teachers' is assigned a value but never used.","'setCurrentPage' is assigned a value but never used.",["149"],["150"],"'Teacher' is defined but never used.","'Login' is defined but never used.","'TeacherOptions' is defined but never used.","'currentPage' is assigned a value but never used.","'useEffect' is defined but never used.","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]